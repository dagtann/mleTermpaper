<<>>=
## === Execute cross-validation =================================
rm(list = ls())
load('./out/base.RData')
packs <- c('MASS', 'Formula')
lapply(packs, library, character.only = TRUE)
set.seed(8590)

## --- Define fold objects and containers -----------------------
n.folds <- 10                       ## folds for cross-validation
## Data imputed, original data cannot be restored
## --> Define folds once and brute force into data
fold <- sample(
  1:n.folds, size = nrow(dta.list[[1]]), replace = TRUE
)
dta.list <- lapply(dta.list, function(x) { 
  x[with(x, order(cowcode, year)), ]
  }
)
for(i in 1:length(dta.files)){
  dta.list[[i]][, 'fold'] <- fold
}

addTerms <- paste(             ## generic formula required coding
  c('fh_ordinal', 'cooptation', 'prio_conflict_intra', 
    'prio_conflict_inter', 'gled_lpop', 'gled_lgdppc', 
    'geddes_personal', 'geddes_monarch', 'geddes_party', 
    'wdi_tradegdp', 'coldwar', 'wdi_gdppcgrowth', 
    'archigos_durationLin', 'archigos_durationSqu', 
    'archigos_durationCub', 'archigos_pastleaderfail', 
    'powthy_pastattempts', 'pseudologross', 'election', 
    'banks_genstrike', 'banks_riot', 'banks_antigovdem',
    'flip_ciri_phys'
  ), collapse = '+'
)

## --- Run cross validation -------------------------------------
mod.train <- vector('list', length = length(erDvs))  ## list for models
names(mod.train) <- paste0('lead_fh', 1:5)
mod.test <- vector('list', length = length(erDvs))
names(mod.test) <- paste0('lead_fh', 1:5)
fail <- 0
counter <- 0
address <- vector(length = 250)

for( dv in paste0('lead_fh', 1:5) ){
  for( j in 1:n.folds ){                                 ## folds
    for( i in 1:length(dta.list) ){                ## imputations
      counter <- counter+1
      mod.train[[dv]][[paste0('fold', j)]][[paste0("imp", i)]] <- polr(
          as.formula(paste(dv, '~', addTerms, sep = ' ')), ## formula
          data = dta.list[[i]][dta.list[[i]][, 'fold'] != j, ],
          method = 'logistic', Hess = TRUE, model = TRUE,
          control = list(maxit = 500)
      )
      if( 
        mod.train[[dv]][[paste0('fold', j)]][[paste0("imp", i)]][['convergence']] != 0) {
        fail <- fail+1
        address[counter] <- 1
      }
      mod.test[[dv]][[paste0('fold', j)]][[paste0("imp", i)]] <- predict(
        mod.train[[dv]][[paste0('fold', j)]][[paste0("imp", i)]],
        newdata = dta.list[[i]][dta.list[[i]][, 'fold'] == j, ],
        type = 'prob'
      )
    }
  }
}
rm(i, j, dv)

table(fail)                            
table(address)
rm(address, fail, counter)                ## all models converged
## --- save results ---------------------------------------------
save.image('./out/models.Rdata')
## END
@